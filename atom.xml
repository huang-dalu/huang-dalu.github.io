<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>UX Caff</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-12-30T05:05:23.143Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>huangdalu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据可视化：heatmap使用使用掩码去掉部分展示</title>
    <link href="http://example.com/2020/12/30/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%9Aheatmap%E4%BD%BF%E7%94%A8%E4%BD%BF%E7%94%A8%E6%8E%A9%E7%A0%81%E5%8E%BB%E6%8E%89%E9%83%A8%E5%88%86%E5%B1%95%E7%A4%BA/"/>
    <id>http://example.com/2020/12/30/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%9Aheatmap%E4%BD%BF%E7%94%A8%E4%BD%BF%E7%94%A8%E6%8E%A9%E7%A0%81%E5%8E%BB%E6%8E%89%E9%83%A8%E5%88%86%E5%B1%95%E7%A4%BA/</id>
    <published>2020-12-30T05:03:49.204Z</published>
    <updated>2020-12-30T05:05:23.143Z</updated>
    
    <content type="html"><![CDATA[<p>去掉热力图的部分内容，这样使得重点更清晰。还是来个小案例演示。<a id="more"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入包</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拿到小费数据集</span></span><br><span class="line">tips = sns.load_dataset(<span class="string">&#x27;titanic&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看前5行数据</span></span><br><span class="line">tips.head()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1609304479785-6609914a-e3d8-4741-9c73-98c11db015bc.png#align=left&display=inline&height=162&margin=%5Bobject%20Object%5D&name=image.png&originHeight=162&originWidth=812&size=27609&status=done&style=none&width=812" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">corr = tips.corr()</span><br><span class="line">corr</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1609304501770-2a1afabf-f8a7-4b59-8c2b-2376706a1db7.png#align=left&display=inline&height=238&margin=%5Bobject%20Object%5D&name=image.png&originHeight=238&originWidth=623&size=37907&status=done&style=none&width=623" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">10</span>, <span class="number">6</span>))</span><br><span class="line">sns.heatmap(corr,square=<span class="literal">True</span>, annot=<span class="literal">True</span>, fmt=<span class="string">&#x27;0.2f&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1609304520537-dccd6c69-4567-4d57-a9f4-fe6ec5f35862.png#align=left&display=inline&height=406&margin=%5Bobject%20Object%5D&name=image.png&originHeight=406&originWidth=478&size=42509&status=done&style=none&width=478" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">10</span>, <span class="number">6</span>))  <span class="comment"># 指定绘图对象宽度和高度</span></span><br><span class="line">mask = np.zeros_like(corr, dtype=np.<span class="built_in">bool</span>)  <span class="comment"># 构造与corr同维数矩阵为bool型矩阵</span></span><br><span class="line">mask[np.triu_indices_from(mask)] = <span class="literal">True</span>  <span class="comment"># 角分线右侧为True</span></span><br><span class="line">g = sns.heatmap(corr, mask=mask,square=<span class="literal">True</span>, annot=<span class="literal">True</span>, fmt=<span class="string">&#x27;0.2f&#x27;</span>)  <span class="comment"># 热力图（看两两相似度）</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1609304528995-843dc5f9-b763-4977-b55d-93bf6b16a391.png#align=left&display=inline&height=402&margin=%5Bobject%20Object%5D&name=output_4_0.png&originHeight=402&originWidth=478&size=23258&status=done&style=none&width=478" alt="output_4_0.png"></p><p>其中，mask[np.triu_indices_from(mask)] = True 将 <code>mask</code> 的对角线及以上设置为 <code>True</code>。这部分就是对应要被遮掉的部分，不清楚可以把<code>mask</code> 打印出来看看。</p><p>还有一个关键点是 sns.heatmap() 的 <code>mask</code> 参数：布尔数组或者 DataFrame 数据，可选参数。如果为空值，数据将不会显示在mask为 True 的单元格中。 具有缺失值的单元格将自动被屏蔽。所以，将 <code>mask</code> 设置为 <code>True</code> 是为了有一个掩码可以去掉右上角的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mask = np.zeros_like(corr, dtype=np.<span class="built_in">bool</span>)  <span class="comment"># 构造与corr同维数矩阵为bool型</span></span><br><span class="line">mask[np.triu_indices_from(mask)] = <span class="literal">True</span>  <span class="comment"># 角分线右侧为True</span></span><br><span class="line">mask</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">array([[ True,  True,  True,  True,  True,  True,  True,  True],</span><br><span class="line">       [False,  True,  True,  True,  True,  True,  True,  True],</span><br><span class="line">       [False, False,  True,  True,  True,  True,  True,  True],</span><br><span class="line">       [False, False, False,  True,  True,  True,  True,  True],</span><br><span class="line">       [False, False, False, False,  True,  True,  True,  True],</span><br><span class="line">       [False, False, False, False, False,  True,  True,  True],</span><br><span class="line">       [False, False, False, False, False, False,  True,  True],</span><br><span class="line">       [False, False, False, False, False, False, False,  True]])</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;去掉热力图的部分内容，这样使得重点更清晰。还是来个小案例演示。</summary>
    
    
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="数据可视化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>简单说说对大数据的看法</title>
    <link href="http://example.com/2020/12/30/%E7%AE%80%E5%8D%95%E8%AF%B4%E8%AF%B4%E5%AF%B9%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9A%84%E6%80%81%E5%BA%A6/"/>
    <id>http://example.com/2020/12/30/%E7%AE%80%E5%8D%95%E8%AF%B4%E8%AF%B4%E5%AF%B9%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9A%84%E6%80%81%E5%BA%A6/</id>
    <published>2020-12-30T03:29:22.939Z</published>
    <updated>2020-12-30T04:55:00.010Z</updated>
    
    <content type="html"><![CDATA[<p>近期看到纽约大学教授盖瑞·马库斯一个观点，从科学方法角度提醒政府、社会以及科学研究者对别对大数据迷恋，引人深思。<a id="more"></a></p><p>延伸一下，这位教授既做科研，也做企业。最近有本翻译的新书<a href="https://weread.qq.com/web/reader/e483297071df7108e482b8bkc81322c012c81e728d9d180">《如何创造可信的AI》</a>，陆奇作序，可读性高。</p><p>好了，回到主题，盖瑞·马库斯表述的观点大致是这样：</p><p>并非是我们不应该相信大数据，或收集大数据，而是不应该把它当成魔法。虽然几乎所有领域都受益于精心收集的大型数据集，但太多人、甚至是科学家，都过分依赖大数据。从物理学到神经科学，比如最近关于了解科学的讨论看起来有一半涉及大数据以及相关工具，比如“维数约简”、“神经网络”、“机器学习算法”和“信息可视化”等。</p><p>但是，科学从根本上依然围绕宇宙规律的探索，而大数据并不擅长的一件事就是发现定律。它善于检测相关性，数据集越可靠，发现其相关性的可能性就越高，即使是涉及多个变量的复杂数据。但相关性从来都不是一种因果关系，以后也不会是。世界上所有的大数据都不会告诉你，吸烟是否会导致肺癌，你必须做实验，了解致癌物、致癌基因和 DNA 复制等专业词汇的固有含义。仅将世界各个城市烟民和非烟民海量数据库制成表格，记录他们何时、何地抽烟，寿命以及死因的细节，这些数据无论包含多少兆字节，都不足以涵盖生物机制的多重复杂性。</p><p>神经科学某些分支的专家已经持如下态度——“建好大数据，结果自然就明了了。”他们认为一旦拥有足够的数据，神经科学问题就能迎刃而解。然而，这种想法并不正确。如果我们的猜想有理有据，那么可以用大数据测试一下，但它绝不该是我们的第一选择。</p><p>并且在最后说明：<strong>只有我们知道自己在寻找什么的时候，才应该向大数据寻求帮助</strong>。</p><p>作为从业者，说说我的理解。</p><p>大数据从来不是一件事情、任务的起因。所有项目立项核心考虑：用户场景、行业情况、项目资源。数据分析是作为工具，辅助决策。和项目是依附关系，不是因果关系。</p><p>另外，大数据意味着事情已经发生，在商业世界，对已经发生的事精做过多分析会造成徒劳无功。比如说：在线教育、SaaS 行业的用户流失分析。对流失用户精细分析，对召回流失用户可能性不大。大数据可以预测用户流失情况，但这只是提前知晓，要改变流失情况还是需要更多产品运营动作干预。在这个维度下，拥有大数据能力，主要做的是「观察」。</p><p>在一些情况下，数据结论越明显，反而错的越明显。最近在看电商订单情况，就以淘宝待付款订单状态举例。</p><p>下图是淘宝待付款订单，进行订单取消操作的具体选项。流程是：待付款订单 – 取消订单 – 选择取消订单原因（默认「价格有点贵」选项）– 确定取消。这个功能初衷，应该是淘宝/商家都希望通过这些选项，了解消费者取消订单的真实意图。根据原因占比来优化流程。</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1609299339173-b785e425-bf9b-466f-8d4c-bd10d5660479.png#align=left&display=inline&height=352&margin=%5Bobject%20Object%5D&name=image.png&originHeight=704&originWidth=680&size=127326&status=done&style=none&width=340" alt="image.png"></p><p>但整个流程走下来就能得知，目前设定下，一定是「价格有点贵」占比最高，因为这是默认选项。多数消费者行为应该是直接点击“确定取消”按钮。这里有两点：</p><p>第一，「价格有点贵」这个选项，即使占比最高，我想淘宝的数据分析师也会将这个选项剔除，因为无意义；至于为什么要默认选「价格有点贵」，我想正是因为“价格有点贵”无意义，因为价格的预期，每位消费者都不一样。并且，消费者肯定是希望越低越好。</p><p>第二，如果这个环节优化为：去掉「价格有点贵」选项，并且不默认选中任何选项，会不会更好？得到这个结论就需要从用户体验指标和获取订单取消原因有效率来衡量了。这是另一个话题。</p><p>回到这个案例，占比最高的数据并不能说明问题，还有可能形成错误引导。<strong>数据之所以呈现成这样，是因为产品设计是这样，而不是用户想这样</strong>。</p><p>所以，我理解盖瑞·马库斯说的“只有我们知道自己在寻找什么的时候，才应该向大数据寻求帮助。”是要先有定性判断、想法，再以大数据作为辅助。才能不偏不倚。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;近期看到纽约大学教授盖瑞·马库斯一个观点，从科学方法角度提醒政府、社会以及科学研究者对别对大数据迷恋，引人深思。</summary>
    
    
    
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>统计学：相关系数介绍</title>
    <link href="http://example.com/2020/12/29/%E7%BB%9F%E8%AE%A1%E7%9F%A5%E8%AF%86%EF%BD%9C%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0%E4%B9%8BPearson/"/>
    <id>http://example.com/2020/12/29/%E7%BB%9F%E8%AE%A1%E7%9F%A5%E8%AF%86%EF%BD%9C%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0%E4%B9%8BPearson/</id>
    <published>2020-12-29T09:50:02.639Z</published>
    <updated>2020-12-29T09:52:55.100Z</updated>
    
    <content type="html"><![CDATA[<p>介绍相关系数，和Python实现。<a id="more"></a></p><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>说到相关系数需要了解的 3 个概念：相关分析、数据期望、协方差。先分别说明这些概念。</p><p><strong>相关分析</strong><br>相关分析是用来说明两个变量之间的关系。这个关系包含：两个变量的方向和强度。</p><ul><li>按变量的多少划分： 单相关、复相关 ；</li><li>按表现形态划分:：直线相关、曲线相关；</li><li>从变动的方向划分：正相关、负相关；</li><li>按相关的程度不同分：完全相关、统计相关、完全无关。</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1603873582000-0bfd75df-8500-4785-b302-1ceb2cef0c52.png#align=left&display=inline&height=496&margin=%5Bobject%20Object%5D&name=image.png&originHeight=992&originWidth=984&size=138258&status=done&style=none&width=492" alt="image.png"></p><p><strong>数学期望</strong><br>例子：某城市有 10 万个家庭，没有孩子的家庭有 1000 个，有一个孩子的家庭有 9 万个，有两个孩子的家庭有 6000 个，有 3 个孩子的家庭有 3000 个。则此城市中任一个家庭中孩子的数目是一个随机变量，记为 X。它可取值 0，1，2，3。其中，X 取 0 的概率为 0.01，取 1 的概率为 0.9，取 2 的概率为 0.06，取 3 的概率为 0.03。则它的数学期望：</p><p><img src="https://cdn.nlark.com/yuque/0/2020/svg/613759/1599092036220-b6fa5f70-fc48-4836-9c3f-a3cda9ef000b.svg#align=left&display=inline&height=24&margin=%5Bobject%20Object%5D&originHeight=24&originWidth=502&size=0&status=done&style=none&width=502"></p><p>即此城市一个家庭平均有小孩  1.11 个，当然人不可能用 1.11 个来算，约等于 2 个。</p><p><strong>协方差</strong><br>协方差可以看这篇文章，已经说得比较清楚。<a href="https://www.matongxue.com/madocs/568/">《如何通俗地理解协方差与相关系数？》</a></p><p><strong>相关系数</strong></p><ul><li>Pearson 相关系数：一般用来计算两个连续型变量的相关系数。也是最常用的相关系数。公式这里就不写了，一些统计学的教程都有说明。当两个变量的标准差都不为零时，相关系数才有定义，皮尔逊相关系数适用于：<ol><li>两个变量之间是线性关系，都是连续数据。</li><li>两个变量的总体是正态分布，或接近正态的单峰分布。</li><li>两个变量的观测值是成对的，每对观测值之间相互独立。</li></ol></li><li>Spearman 相关系数：两个变量无论连续还是分类都可以使用。</li><li>kendall 相关系数：一个连续一个分类。最好是定序变量。</li></ul><p>相关系数是公式的不同。主要的 Pearson 相关系数在上面那篇《如何通俗地理解协方差与相关系数？》中也有，这里不多做介绍。</p><p>−1 ≤ 𝐶𝑜𝑟𝑌,𝑋 ≤ 1 代表的含义：</p><ol><li>值： Y 和 X 之间线性关系的强度；</li><li>符号： Y 和 X 之间线性关系的方向。</li></ol><p>关于相关系数 r 的取值说明：</p><ol><li>r 的取值范围为 -1 ≤ r ≤ + 1；</li><li>|r| 越接近 1，表明相关关系越密切；越接近于0，相关关系就越不密切。r = 0，两变量无直线关系；</li><li>r = +1 或 r = -1,表明两变量完全相关；</li><li>r &gt; 0 现象呈正直线关系；r &lt; 0 现象呈负相关；</li><li>在说明两个变量之间线性关系的密切程度时，根据经验可将相关程度分为以下几种情况：当 |r|  ≥  0.8 时，视为高度相关；0.5 ≤ |r| &lt; 0.8 时， 视为中度相关；0.3 ≤ |r| &lt; 5时，视为低度相关； |r| &lt; 0.3 时，说明两个变量之间的相关程度极弱，可视为不相关。但这种说明必须建立在相关系数通过显著性检验的基础之上。</li></ol><h4 id="Python-实现"><a href="#Python-实现" class="headerlink" title="Python 实现"></a>Python 实现</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入包</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拿到titanic数据集</span></span><br><span class="line">titanic = sns.load_dataset(<span class="string">&#x27;titanic&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看前5行数据</span></span><br><span class="line">titanic.head()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1603873841737-87d6dc17-8129-4cd0-97ac-2da95db898ea.png#align=left&display=inline&height=162&margin=%5Bobject%20Object%5D&name=image.png&originHeight=162&originWidth=818&size=27394&status=done&style=none&width=818" alt="image.png"><br>参数说明：</p><ul><li>method{‘pearson’, ‘kendall’, ‘spearman’} ，默认 Pearson 相关系数；</li><li>min_periods：int类型可选值。观察每对列所需的最小数，样本最少的数据量。仅适用于 Pearson 和Spearman。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">corr = titanic.corr()</span><br><span class="line">corr</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1603873908679-37d13fbd-f717-4bcf-a0b6-4709530d73b4.png#align=left&display=inline&height=243&margin=%5Bobject%20Object%5D&name=image.png&originHeight=243&originWidth=624&size=37919&status=done&style=none&width=624" alt="image.png"></p><p><strong>相关系数可视化</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">14</span>,<span class="number">10</span>))</span><br><span class="line">sns.heatmap(corr,linewidths=<span class="number">0.2</span>, cmap=<span class="string">&quot;YlGnBu&quot;</span>,annot=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1603873925652-9aa02770-8c26-40bf-a1d8-8672d684a4bd.png#align=left&display=inline&height=579&margin=%5Bobject%20Object%5D&name=output_4_1.png&originHeight=579&originWidth=754&size=41369&status=done&style=none&width=754" alt="output_4_1.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;介绍相关系数，和Python实现。</summary>
    
    
    
    
    <category term="统计学" scheme="http://example.com/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Pandas中axis的位置说明</title>
    <link href="http://example.com/2020/12/29/Pandas%E4%B8%ADaxis%E7%9A%84%E4%BD%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/"/>
    <id>http://example.com/2020/12/29/Pandas%E4%B8%ADaxis%E7%9A%84%E4%BD%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</id>
    <published>2020-12-29T07:32:57.761Z</published>
    <updated>2020-12-29T07:34:38.559Z</updated>
    
    <content type="html"><![CDATA[<p> 先看一个演示。</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入包</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拿到小费数据集</span></span><br><span class="line">tips = sns.load_dataset(<span class="string">&#x27;tips&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据介绍： total_bill列为消费总金额；tip列为小费金额；sex列为顾客性别；smoker列为顾客是否抽烟；day列为消费的星期；time列为聚餐的时间段；size列为聚餐人数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看前5行数据</span></span><br><span class="line">tips.head()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1609226941755-0c9393d7-afd9-4db5-85ea-308427f352b2.png#align=left&display=inline&height=164&margin=%5Bobject%20Object%5D&name=image.png&originHeight=164&originWidth=347&size=15120&status=done&style=none&width=347" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tips = tips.drop([<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;smoker&#x27;</span>,<span class="string">&#x27;day&#x27;</span>,<span class="string">&#x27;time&#x27;</span>],axis=<span class="number">1</span>)</span><br><span class="line">tips.head()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1609226958701-7dbedc61-feab-4467-bbdd-135dbe7a8897.png#align=left&display=inline&height=162&margin=%5Bobject%20Object%5D&name=image.png&originHeight=162&originWidth=158&size=7027&status=done&style=none&width=158" alt="image.png"></p><p><code>axis</code> 使用 0 值表示沿着每一列或行标签\索引值向下执行方法；使用 1 值表示沿着每一行或者列标签模向执行对应的方法。</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1609227050243-fe33bb4c-ab6f-4f62-8cdd-6f4118e7c351.png#align=left&display=inline&height=341&margin=%5Bobject%20Object%5D&name=image.png&originHeight=341&originWidth=652&size=95214&status=done&style=none&width=652" alt="image.png"></p><p>如上图，在 Pandas 中， <code>axis</code> 的位置图示。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt; 先看一个演示。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python常见的字符串操作</title>
    <link href="http://example.com/2020/12/29/Python%E5%9F%BA%E7%A1%80%EF%BD%9C%E5%B8%B8%E8%A7%81%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2020/12/29/Python%E5%9F%BA%E7%A1%80%EF%BD%9C%E5%B8%B8%E8%A7%81%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</id>
    <published>2020-12-29T03:46:08.630Z</published>
    <updated>2020-12-29T03:48:23.829Z</updated>
    
    <content type="html"><![CDATA[<p>总结下Python一部分字符串操作的基础总结。</p><a id="more"></a><p>文章目录如下：</p><ul><li>使用str.split() 切分数据</li><li>将datetime类型转化为字符串类型</li><li>字符串的合并操作</li><li>使用 str.strip() 去除字符串前面和后面所有的字符串</li><li>替代字符串中的某些字符串为另外的字符串</li><li>Python 中的 i++，i+</li></ul><p>下面简单的演示。</p><h4 id="使用str-split-切分数据"><a href="#使用str-split-切分数据" class="headerlink" title="使用str.split() 切分数据"></a>使用str.split() 切分数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line">man = pd.DataFrame(&#123;</span><br><span class="line">    <span class="string">&#x27;data&#x27;</span>:[<span class="string">&#x27;张三|男&#x27;</span>,<span class="string">&#x27;李四|男&#x27;</span>,<span class="string">&#x27;王五|男&#x27;</span>]</span><br><span class="line">&#125;)</span><br><span class="line">man</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1606647338906-e3bce98c-2eff-44f2-83f2-fd779b754ce1.png#align=left&display=inline&height=114&margin=%5Bobject%20Object%5D&name=image.png&originHeight=228&originWidth=150&size=6410&status=done&style=none&width=75" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用str.split() 把数据分成两列</span></span><br><span class="line">man = man[<span class="string">&#x27;data&#x27;</span>].apply(<span class="keyword">lambda</span> x :Series(x.split(<span class="string">&#x27;|&#x27;</span>)))</span><br><span class="line">man</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1606647357289-ce63d5c5-264b-4a9f-8775-b1fde14da559.png#align=left&display=inline&height=109&margin=%5Bobject%20Object%5D&name=image.png&originHeight=218&originWidth=158&size=5938&status=done&style=none&width=79" alt="image.png"></p><h4 id="将datetime类型转化为字符串类型"><a href="#将datetime类型转化为字符串类型" class="headerlink" title="将datetime类型转化为字符串类型"></a>将datetime类型转化为字符串类型</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将datetime类型转化为字符串类型</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line">stamp = datetime(<span class="number">2019</span>,<span class="number">5</span>,<span class="number">1</span>)</span><br><span class="line">stamp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datetime.datetime(2019, 5, 1, 0, 0)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str_stamp= <span class="built_in">str</span>(stamp)</span><br><span class="line">str_stamp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;2019-05-01 00:00:00&#39;</span><br></pre></td></tr></table></figure><h4 id="字符串的合并操作"><a href="#字符串的合并操作" class="headerlink" title="字符串的合并操作"></a>字符串的合并操作</h4><p><strong>使用join()连接字符串数组</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># join()：连接字符串数组。将字符串、元组、列表、Series中的元素以指定的字符(分隔符)连接生成一个新的字符串</span></span><br><span class="line">a=[<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>]</span><br><span class="line">text = <span class="string">&#x27;  &#x27;</span>.join(a)</span><br><span class="line">text</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;1  2  3  4  5&#39;</span><br></pre></td></tr></table></figure><p><strong>使用 + 连接字符串</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用加号</span></span><br><span class="line">x = <span class="string">&#x27;a&#x27;</span> + <span class="string">&#x27;b&#x27;</span></span><br><span class="line">x</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;ab&#39;</span><br></pre></td></tr></table></figure><p><strong>使用format()将多个字符串合并，主要用在变量输出上</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="string">&#x27;i am &#123;1&#125; and &#123;0&#125; years old&#x27;</span>.<span class="built_in">format</span>(<span class="number">30.</span>, <span class="string">&#x27;Tony&#x27;</span>)</span><br><span class="line">x</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;i am Tony and 30.0 years old&#39;</span><br></pre></td></tr></table></figure><p><strong>使用Pandas自带的cat()函数</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  Series.str.cat(others=None,  # 要合并的另外一个对象,如果为空则将左侧对象组合</span></span><br><span class="line"><span class="comment">#                 sep=None,     # 合并的分隔符，默认为空</span></span><br><span class="line"><span class="comment">#                 na_rep=None)  # 如果遇到NA值的处理方式，默认忽略</span></span><br><span class="line"></span><br><span class="line">EG = pd.Series([<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]).<span class="built_in">str</span>.cat(sep=<span class="string">&#x27;;&#x27;</span>)</span><br><span class="line">EG</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;a;b;c&#39;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EG = pd.Series([<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]).<span class="built_in">str</span>.cat([<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>], sep=<span class="string">&#x27;@@&#x27;</span>)</span><br><span class="line">EG</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0    a@@A</span><br><span class="line">1    b@@B</span><br><span class="line">2    c@@C</span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure><h4 id="使用-str-strip-去除字符串前面和后面所有的字符串"><a href="#使用-str-strip-去除字符串前面和后面所有的字符串" class="headerlink" title="使用 str.strip() 去除字符串前面和后面所有的字符串"></a>使用 str.strip() 去除字符串前面和后面所有的字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># str.strip([chars]);去除字符串前面和后面的所有设置的字符串，默认为空格</span></span><br><span class="line">st = <span class="string">&quot;   hello    &quot;</span></span><br><span class="line">st = st.strip()</span><br><span class="line">print(st + <span class="string">&#x27;word&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helloword</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除字符串&#x27;l, o&#x27;</span></span><br><span class="line">st = st.strip(<span class="string">&#x27;l, o&#x27;</span>)</span><br><span class="line">print(st)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">he</span><br></pre></td></tr></table></figure><h4 id="替代字符串中的某些字符串为另外的字符串"><a href="#替代字符串中的某些字符串为另外的字符串" class="headerlink" title="替代字符串中的某些字符串为另外的字符串"></a>替代字符串中的某些字符串为另外的字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># str.replace(old, new[, max])</span></span><br><span class="line"><span class="comment"># old -- 将被替换的子字符串。</span></span><br><span class="line"><span class="comment"># new -- 新字符串，用于替换old子字符串。</span></span><br><span class="line"><span class="comment"># max -- 可选字符串, 替换不超过 max 次</span></span><br><span class="line"></span><br><span class="line">st = <span class="string">&quot;hello&quot;</span></span><br><span class="line">st = st.replace(<span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">st</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;healo&#39;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 替换字符串中的某些子串，可以用正则表达式来匹配被选子串。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># re.sub(pattern, repl, string, count=0, flags=0)</span></span><br><span class="line"><span class="comment"># pattern：表示正则表达式中的模式字符串；</span></span><br><span class="line"><span class="comment"># repl：被替换的字符串（既可以是字符串，也可以是函数）；</span></span><br><span class="line"><span class="comment"># string：要被处理的，要被替换的字符串；</span></span><br><span class="line"><span class="comment"># count：匹配的次数, 默认是全部替换</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">st = <span class="string">&quot;hello 2019&quot;</span></span><br><span class="line">st = re.sub(<span class="string">&quot;([0-9]+)&quot;</span>,<span class="string">&quot;word&quot;</span>,st)</span><br><span class="line">print(st)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello word</span><br></pre></td></tr></table></figure><h4 id="Python-中的-i-，i"><a href="#Python-中的-i-，i" class="headerlink" title="Python 中的 i++，i+"></a>Python 中的 i++，i+</h4><p> 顺便在这篇基础下面总结下 Python 中的 i++，i+ 这类写法和 Java 不一样。在新手入门时会有点疑问，这里列一下。</p><p><strong>i+1</strong></p><p>这种都是一样的写法，没什么问题，很好理解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    i=i+<span class="number">1</span></span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>i+</strong></p><p>i+ 就是 Python 中的自增写法。相当于其他语言的 ++i。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    i+=<span class="number">5</span></span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td></tr></table></figure><p><strong>i-</strong></p><p>Python 中的自减写法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    i-=<span class="number">5</span></span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-5</span><br><span class="line">-4</span><br><span class="line">-3</span><br></pre></td></tr></table></figure><p><strong>++i</strong></p><p>Python 中的 ++i，仅仅是作为判断运算符号,类似数学中的负负得正。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 体现在这个案例中，就是对结果值没影响</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    ++i</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p><strong>i++</strong></p><p>Python 中不支持这类写法，所以直接报错。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    i++</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  File &quot;&lt;ipython-input-21-7faff3d068a4&gt;&quot;, line 2</span><br><span class="line">    i++</span><br><span class="line">       ^</span><br><span class="line">SyntaxError: invalid syntax</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;总结下Python一部分字符串操作的基础总结。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>数据可视化：sns.kdeplot（核密度估计图）查看数据分布</title>
    <link href="http://example.com/2020/12/29/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%9Asns.kdeplot%EF%BC%88%E6%A0%B8%E5%AF%86%E5%BA%A6%E4%BC%B0%E8%AE%A1%E5%9B%BE%EF%BC%89%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%88%86%E5%B8%83/"/>
    <id>http://example.com/2020/12/29/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%9Asns.kdeplot%EF%BC%88%E6%A0%B8%E5%AF%86%E5%BA%A6%E4%BC%B0%E8%AE%A1%E5%9B%BE%EF%BC%89%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%88%86%E5%B8%83/</id>
    <published>2020-12-29T03:30:52.322Z</published>
    <updated>2020-12-29T03:52:04.500Z</updated>
    
    <content type="html"><![CDATA[<p>接触到核密度估计是seaborn库中的 kdeplot （也就是核密度估计图）。它可以比较直观看出样本数据的分布特征。用到查看单个样本数据分布特征，和比较多个样本数据分布是否一致。</p><a id="more"></a><p>了解数据分布的另一种图示方法是使用直方图。但是使用起来有几个缺点。一个原因是绘制直方图需要确定组距，组距的大小就会确定分布特征。而且使用直方图展示的分布曲线并不平滑。</p><p>回到核密度估计，查阅了一些相关理论，理论讲解部分目前懂了，但是数学公式推导还是有些不懂。由于目前只是核密度图来查看数据集分布，所以这部分原理决定还是放一放，留在后续。</p><p>常用的还是seaborn库的 kdeplot，也就是核密度估计图。下面用seaborn库自带的小费数据集演示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入包</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拿到小费数据集</span></span><br><span class="line">tips = sns.load_dataset(<span class="string">&#x27;tips&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据介绍： total_bill列为消费总金额；tip列为小费金额；sex列为顾客性别；smoker列为顾客是否抽烟；day列为消费的星期；time列为聚餐的时间段；size列为聚餐人数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看前5行数据</span></span><br><span class="line">tips.head()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1604641656010-829f760d-8c68-4ad9-8dde-8c70136a7f0d.png#align=left&display=inline&height=164&margin=%5Bobject%20Object%5D&name=image.png&originHeight=164&originWidth=346&size=15176&status=done&style=none&width=346" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">column = tips.columns.tolist()[:<span class="number">2</span>]  <span class="comment"># 列表头</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">4</span>))  <span class="comment"># 指定绘图对象宽度和高度</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">    plt.subplot(<span class="number">1</span>, <span class="number">2</span>, i + <span class="number">1</span>)  <span class="comment"># 1行2列子图</span></span><br><span class="line">    sns.kdeplot(tips[column[i]],shade=<span class="literal">True</span>)</span><br><span class="line">    plt.xlabel(column[i], fontsize=<span class="number">8</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1604641604139-fb51ce59-a977-40c5-91df-ab330e7836f6.png#align=left&display=inline&height=261&margin=%5Bobject%20Object%5D&name=output_2_0.png&originHeight=261&originWidth=601&size=19762&status=done&style=none&width=601" alt="output_2_0.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ax = sns.kdeplot(tips[<span class="string">&#x27;total_bill&#x27;</span>], color=<span class="string">&quot;Red&quot;</span>, shade=<span class="literal">True</span>)</span><br><span class="line">ax = sns.kdeplot(tips[<span class="string">&#x27;tip&#x27;</span>], color=<span class="string">&quot;Blue&quot;</span>, shade=<span class="literal">True</span>)</span><br><span class="line">ax = ax.legend([<span class="string">&quot;total_bill&quot;</span>,<span class="string">&quot;tip&quot;</span>])</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1604641610796-fe142201-9b34-4f36-94b5-623468070693.png#align=left&display=inline&height=248&margin=%5Bobject%20Object%5D&name=output_3_0.png&originHeight=248&originWidth=378&size=10435&status=done&style=none&width=378" alt="output_3_0.png"><br>拿小费数据集为例。图一单个看 total_bill 和 tip，两个数据集分布基本一致，都是略微右偏。</p><p>另外。提一个问题：来看图二，放在一起对比就会明显。如果假设一个是测试集数据，另外一个为训练集数据。这类情况是否需要对数据处理进行处理？</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;接触到核密度估计是seaborn库中的 kdeplot （也就是核密度估计图）。它可以比较直观看出样本数据的分布特征。用到查看单个样本数据分布特征，和比较多个样本数据分布是否一致。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="数据可视化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>几首小诗</title>
    <link href="http://example.com/2020/12/28/%E5%87%A0%E9%A6%96%E5%B0%8F%E8%AF%97/"/>
    <id>http://example.com/2020/12/28/%E5%87%A0%E9%A6%96%E5%B0%8F%E8%AF%97/</id>
    <published>2020-12-28T09:55:23.112Z</published>
    <updated>2020-12-28T11:34:12.785Z</updated>
    
    <content type="html"><![CDATA[<p>年轻人是一定要写诗的。</p><a id="more"></a><p>到近 2 年几乎是没有写了，把之前写的几首存放到这里。</p><hr><p><strong>推手</strong></p><p>被无数人推着走</p><p>沿路都是他们的欲望，更多的是钱权</p><p>我负责浇水、施肥</p><p>然而</p><p>我可不想做浇灌者</p><p>我得是自己梦想的开垦者</p><hr><p><strong>献给监控岗位</strong></p><p>监控才是最无趣的</p><p>因为没有善于发现美的眼睛</p><p>需要拼命寻找人性的恶</p><hr><p><strong>26岁</strong></p><p>有着青年人的面孔，却没有青年人的冲劲</p><p>有着中年人的焦虑，却没有中年人的实力</p><hr><p><strong>致敬美好时代的无病呻吟</strong></p><p>我彻头彻尾的感受到了世界的虚伪 </p><p>因为 </p><p>洗手间居然不是用来洗手的</p><hr><p><strong>可以说这是成熟，也可以说是现实</strong></p><p>一刹那有了留学的梦想躯干</p><p>半天时间还长出了枝桠</p><p>再花了两天时间了解方案</p><p>最终亲自剪了枝桠、砍了躯干</p><p>表面上平静如湖，心里已经浪潮翻转</p><p>20-30岁，第24个梦想</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;年轻人是一定要写诗的。&lt;/p&gt;</summary>
    
    
    
    
    <category term="诗词" scheme="http://example.com/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>判断数据正态分布的 2 个方法</title>
    <link href="http://example.com/2020/12/28/%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83%E7%9A%84%202%20%E4%B8%AA%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2020/12/28/%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83%E7%9A%84%202%20%E4%B8%AA%E6%96%B9%E6%B3%95/</id>
    <published>2020-12-28T08:42:15.579Z</published>
    <updated>2020-12-28T09:12:43.197Z</updated>
    
    <content type="html"><![CDATA[<p>说明判断数据正态分布的 2 个方法，当然也不止 2 种，只是比较常用。</p><a id="more"></a><h3 id="Q-Q图"><a href="#Q-Q图" class="headerlink" title="Q-Q图"></a>Q-Q图</h3><p>Q-Q图（分位数-分位数图）是两个分位数彼此相对的图。分位数是某些值低于该分位数的分数。</p><p>例如，中位数是一个分位数，其中 50％ 的数据低于该点，而 50％ 的数据位于该点之上。Q-Q图的目的是找出两组数据是否来自同一分布。Q-Q图上绘制了 45 度角；如果两个数据集来自同一分布，则这些点将落在该参考线上。</p><p><strong>Q-Q图的 2 个作用：</strong></p><ol><li>数据集和正态分布做对比，观察数据是否符合正态分布；</li><li>两个数据集对比，观察两个数据集是否分布一致。</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1602828171528-44c4652b-bf4d-400d-a13d-bf6cc70ac115.png#align=left&display=inline&height=411&margin=%5Bobject%20Object%5D&name=image.png&originHeight=411&originWidth=476&size=15252&status=done&style=none&width=476" alt="image.png"></p><p><strong>举例：</strong>7.19、6.31、5.89、4.5、3.77、4.25、5.19、5.79、6.79。以上值是否来自正态分布？<br><strong>解法：</strong></p><ol><li>从最小到最大排序。3.77、4.25、4.50、5.19、5.89、5.79、6.31、6.79、7.19</li><li>绘制正态分布曲线。将曲线分成n + 1个段。我们有 9 个值，因此将曲线分为 10 个大小相等的区域。对于此示例，每个线段占面积的 10％（因为100％/ 10 = 10％）。</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1602828580368-fc61d994-2506-4625-8ccf-adbbcd5ec8e4.png#align=left&display=inline&height=237&margin=%5Bobject%20Object%5D&name=image.png&originHeight=237&originWidth=346&size=33433&status=done&style=none&width=346" alt="image.png"></p><ol start="3"><li>在第 3 步中找到每个分段的 z 值（截止点）。这些分段是 _area_，因此请参考 z 表（标准正态概率）以获取每个分段的 z 值。在 z 值是：</li></ol><table><thead><tr><th align="center"><strong>分位</strong></th><th align="center"><strong>z值</strong></th></tr></thead><tbody><tr><td align="center">10％</td><td align="center">-1.28</td></tr><tr><td align="center">20％</td><td align="center">-0.84</td></tr><tr><td align="center">30%</td><td align="center">-0.52</td></tr><tr><td align="center">40%</td><td align="center">-0.25</td></tr><tr><td align="center">50%</td><td align="center">0</td></tr><tr><td align="center">60%</td><td align="center">0.25</td></tr><tr><td align="center">70%</td><td align="center">0.52</td></tr><tr><td align="center">80%</td><td align="center">0.84</td></tr><tr><td align="center">90%</td><td align="center">1.28</td></tr><tr><td align="center">100%</td><td align="center">3.0</td></tr></tbody></table><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1602828613856-7b202d41-eea6-42a5-8e4a-39d23f248976.png#align=left&display=inline&height=237&margin=%5Bobject%20Object%5D&name=image.png&originHeight=237&originWidth=346&size=31881&status=done&style=none&width=346" alt="image.png"></p><ol start="4"><li>针对正态分布截止点（步骤 3 ）绘制数据集值（步骤 1 ）。绘制表格：</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1602828641949-822e7917-2ca4-4053-9d3d-fdd9ee32661a.png#align=left&display=inline&height=338&margin=%5Bobject%20Object%5D&name=image.png&originHeight=338&originWidth=523&size=14051&status=done&style=none&width=523" alt="image.png"></p><p>Q-Q图上的（几乎）直线表示数据符合正态分布。</p><h3 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h3><p>使用直方图来观察数据集符合正态分布相对容易理解，只需要观察数据集是否是正态分布的钟型形状，两头低，中间高。越标准与正态分布越吻合。</p><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入包</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拿到小费数据集</span></span><br><span class="line">tips = sns.load_dataset(<span class="string">&#x27;tips&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据介绍： total_bill列为消费总金额；tip列为小费金额；sex列为顾客性别；smoker列为顾客是否抽烟；day列为消费的星期；time列为聚餐的时间段；size列为聚餐人数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看前5行数据</span></span><br><span class="line">tips.head()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1603089692569-f433353b-da04-448e-9a7a-02375525144b.png#align=left&display=inline&height=159&margin=%5Bobject%20Object%5D&name=image.png&originHeight=159&originWidth=343&size=14989&status=done&style=none&width=343" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直方图</span></span><br><span class="line">ax=plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">sns.distplot(tips[<span class="string">&#x27;total_bill&#x27;</span>],fit=stats.norm)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Q-Q图</span></span><br><span class="line">ax=plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">res = stats.probplot(tips[<span class="string">&#x27;total_bill&#x27;</span>], plot=plt)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1603089713759-95b2cf22-990e-4797-87e4-0f3ec6cc3c2e.png#align=left&display=inline&height=334&margin=%5Bobject%20Object%5D&name=image.png&originHeight=334&originWidth=602&size=33091&status=done&style=none&width=602" alt="image.png"></p><p>观察可以得出，total_bill数据集大概是符合正态分布的。</p><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://www.statisticshowto.com/q-q-plots/"><em>https://www.statisticshowto.com/q-q-plots/</em></a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;说明判断数据正态分布的 2 个方法，当然也不止 2 种，只是比较常用。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda 安装部分三方包流程</title>
    <link href="http://example.com/2020/12/28/Anaconda%20%E5%AE%89%E8%A3%85%E9%83%A8%E5%88%86%E4%B8%89%E6%96%B9%E5%8C%85%E6%B5%81%E7%A8%8B/"/>
    <id>http://example.com/2020/12/28/Anaconda%20%E5%AE%89%E8%A3%85%E9%83%A8%E5%88%86%E4%B8%89%E6%96%B9%E5%8C%85%E6%B5%81%E7%A8%8B/</id>
    <published>2020-12-28T08:16:47.524Z</published>
    <updated>2020-12-28T08:19:23.529Z</updated>
    
    <content type="html"><![CDATA[<p>Anaconda 安装部分三方包流程说明。</p><a id="more"></a><p>在使用 Anaconda 过程中，一些常用包安装流程操作是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install xxx</span><br></pre></td></tr></table></figure><p>但是不可避免会使用一些第三方库，这时候还是按照以上语法会安装失败，这里以安装 jieba 库为例（jieba 库是一个常用的中文分词库）。结果如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">(base) huangdaludeMacBook-Air:~ xxhuang$ conda install jieba</span><br><span class="line">Collecting package metadata (current_repodata.json): done</span><br><span class="line">Solving environment: failed <span class="keyword">with</span> initial frozen solve. Retrying <span class="keyword">with</span> flexible solve.</span><br><span class="line">Collecting package metadata (repodata.json): done</span><br><span class="line">Solving environment: failed <span class="keyword">with</span> initial frozen solve. Retrying <span class="keyword">with</span> flexible solve.</span><br><span class="line"></span><br><span class="line">PackagesNotFoundError: The following packages are <span class="keyword">not</span> available <span class="keyword">from</span> current channels:</span><br><span class="line"></span><br><span class="line">  - jieba</span><br><span class="line"></span><br><span class="line">Current channels:</span><br><span class="line"></span><br><span class="line">  - https://repo.anaconda.com/pkgs/main/osx-<span class="number">64</span></span><br><span class="line">  - https://repo.anaconda.com/pkgs/main/noarch</span><br><span class="line">  - https://repo.anaconda.com/pkgs/r/osx-<span class="number">64</span></span><br><span class="line">  - https://repo.anaconda.com/pkgs/r/noarch</span><br><span class="line"></span><br><span class="line">To search <span class="keyword">for</span> alternate channels that may provide the conda package yo<span class="string">u&#x27;re</span></span><br><span class="line"><span class="string">looking for, navigate to</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    https://anaconda.org</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">and use the search bar at the top of the page.</span></span><br></pre></td></tr></table></figure><p>错误提示部分包不能以这种方式下载。类似这种情况可以换一种方式。首先可以先找到对应包的版本信息：anaconda search -t conda jieba，返回结果如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">(base) huangdaludeMacBook-Air:~ xxhuang$ anaconda search -t conda jieba</span><br><span class="line">Using Anaconda API: https://api.anaconda.org</span><br><span class="line">Packages:</span><br><span class="line">     Name                      |  Version | Package Types   | Platforms       | Builds    </span><br><span class="line">     ------------------------- |   ------ | --------------- | --------------- | ----------</span><br><span class="line">     auto/jieba                |     <span class="number">0.32</span> | conda           | linux-<span class="number">64</span>, linux-<span class="number">32</span> | py27_0    </span><br><span class="line">                                          : http://github.com/fxsjy</span><br><span class="line">     conda-forge/jieba         |     <span class="number">0.39</span> | conda           | linux-<span class="number">64</span>, win-<span class="number">32</span>, osx-<span class="number">64</span>, noarch, win-<span class="number">64</span> | py_1, py36_0, py35_0, py27_0</span><br><span class="line">                                          : Chinese Words Segementation Utilities</span><br><span class="line">     conda-forge/jieba3k       |   <span class="number">0.35</span><span class="number">.1</span> | conda           | linux-<span class="number">64</span>, win-<span class="number">32</span>, osx-<span class="number">64</span>, win-<span class="number">64</span>, noarch | py36_1001, py37_1001, py36_1, py_0, py35_1001, py38_1001, py35_1</span><br><span class="line">                                          : Chinese Words Segementation Utilities</span><br><span class="line">     creditx/jieba             |     <span class="number">0.38</span> | conda           | linux-<span class="number">64</span>        | py35_0, py27_0</span><br><span class="line">     hargup/jieba              |          | conda           | linux-<span class="number">64</span>        | py27_0    </span><br><span class="line">                                          : Chinese Words Segementation Utilities</span><br><span class="line">     iilab/jieba               |   <span class="number">0.36</span><span class="number">.2</span> | conda           | linux-<span class="number">64</span>, osx-<span class="number">64</span> | py34_0    </span><br><span class="line">                                          : Chinese Words Segementation Utilities</span><br><span class="line">     iilab/jieba3k             |   <span class="number">0.35</span><span class="number">.1</span> | conda           | linux-<span class="number">64</span>, osx-<span class="number">64</span> | py34_0    </span><br><span class="line">                                          : Chinese Words Segementation Utilities</span><br><span class="line">     jiangxiluning/jieba       |   <span class="number">0.36</span><span class="number">.2</span> | conda           | linux-<span class="number">64</span>, osx-<span class="number">64</span>, win-<span class="number">64</span> | py27_0    </span><br><span class="line">                                          : Chinese Words Segementation Utilities</span><br><span class="line">     moustik/jieba             |     <span class="number">0.38</span> | conda           | linux-<span class="number">64</span>        | py27_0    </span><br><span class="line">     r/r-jiebard               |      <span class="number">0.1</span> | conda           | noarch          | r36h6115d3f_0</span><br><span class="line">                                          : jiebaR <span class="keyword">is</span> a package <span class="keyword">for</span> Chinese text segmentation, keyword extraction <span class="keyword">and</span> speech tagging. This package provides the data files required by jiebaR.</span><br><span class="line">     r_test/r-jiebard          |      <span class="number">0.1</span> | conda           | noarch          | r36h6115d3f_0</span><br><span class="line">                                          : jiebaR <span class="keyword">is</span> a package <span class="keyword">for</span> Chinese text segmentation, keyword extraction <span class="keyword">and</span> speech tagging. This package provides the data files required by jiebaR.</span><br><span class="line">     syllabs_admin/jieba       |     <span class="number">0.39</span> | conda           | linux-<span class="number">64</span>        | py27ha286e51_0</span><br><span class="line">Found <span class="number">12</span> packages</span><br><span class="line"></span><br><span class="line">Run <span class="string">&#x27;anaconda show &lt;USER/PACKAGE&gt;&#x27;</span> to get installation details</span><br></pre></td></tr></table></figure><p>选择对应的版本，根据版本，输入以下信息：anaconda show conda-forge/jieba，返回结果如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(base) huangdaludeMacBook-Air:~ xxhuang$ anaconda show conda-forge/jieba</span><br><span class="line">Using Anaconda API: https://api.anaconda.org</span><br><span class="line">Name:    jieba</span><br><span class="line">Summary: Chinese Words Segementation Utilities</span><br><span class="line">Access:  public</span><br><span class="line">Package Types:  conda</span><br><span class="line">Versions:</span><br><span class="line">   + <span class="number">0.38</span></span><br><span class="line">   + <span class="number">0.39</span></span><br><span class="line"></span><br><span class="line">To install this package <span class="keyword">with</span> conda run:</span><br><span class="line">     conda install --channel https://conda.anaconda.org/conda-forge jieba</span><br></pre></td></tr></table></figure><p>根据返回的信息，执行最后一行信息即可安装。输入 conda install –channel <a href="https://conda.anaconda.org/conda-forge">https://conda.anaconda.org/conda-forge</a> jieba</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">(base) huangdaludeMacBook-Air:~ xxhuang$ conda install --channel https://conda.anaconda.org/conda-forge jieba</span><br><span class="line">Collecting package metadata (current_repodata.json): done</span><br><span class="line">Solving environment: done</span><br><span class="line"></span><br><span class="line"><span class="comment">## Package Plan ##</span></span><br><span class="line"></span><br><span class="line">  environment location: /opt/anaconda3</span><br><span class="line"></span><br><span class="line">  added / updated specs:</span><br><span class="line">    - jieba</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The following packages will be downloaded:</span><br><span class="line"></span><br><span class="line">    package                    |            build</span><br><span class="line">    ---------------------------|-----------------</span><br><span class="line">    ca-certificates-<span class="number">2019.11</span><span class="number">.28</span> |       hecc5488_0         <span class="number">145</span> KB  conda-forge</span><br><span class="line">    certifi-<span class="number">2019.11</span><span class="number">.28</span>         |           py37_0         <span class="number">148</span> KB  conda-forge</span><br><span class="line">    conda-<span class="number">4.8</span><span class="number">.2</span>                |           py37_0         <span class="number">3.0</span> MB  conda-forge</span><br><span class="line">    jieba-<span class="number">0.39</span>                 |             py_1         <span class="number">5.6</span> MB  conda-forge</span><br><span class="line">    openssl-<span class="number">1.1</span><span class="number">.1</span>d             |       h0b31af3_0         <span class="number">1.9</span> MB  conda-forge</span><br><span class="line">    ------------------------------------------------------------</span><br><span class="line">                                           Total:        <span class="number">10.8</span> MB</span><br><span class="line"></span><br><span class="line">The following NEW packages will be INSTALLED:</span><br><span class="line"></span><br><span class="line">  jieba              conda-forge/noarch::jieba-<span class="number">0.39</span>-py_1</span><br><span class="line"></span><br><span class="line">The following packages will be UPDATED:</span><br><span class="line"></span><br><span class="line">  ca-certificates    pkgs/main::ca-certificates-2019.11.27~ --&gt; conda-forge::ca-certificates-2019.11.28-hecc5488_0</span><br><span class="line">  conda                       pkgs/main::conda-4.8.1-py37_0 --&gt; conda-forge::conda-4.8.2-py37_0</span><br><span class="line"></span><br><span class="line">The following packages will be SUPERSEDED by a higher-priority channel:</span><br><span class="line"></span><br><span class="line">  certifi                                         pkgs/main --&gt; conda-forge</span><br><span class="line">  openssl              pkgs/main::openssl-1.1.1d-h1de35cc_3 --&gt; conda-forge::openssl-1.1.1d-h0b31af3_0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Proceed ([y]/n)? y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Downloading <span class="keyword">and</span> Extracting Packages</span><br><span class="line">conda-<span class="number">4.8</span><span class="number">.2</span>          | <span class="number">3.0</span> MB    | <span class="comment">############################################################################################################################################################### | 100% </span></span><br><span class="line">certifi-<span class="number">2019.11</span><span class="number">.28</span>   | <span class="number">148</span> KB    | <span class="comment">############################################################################################################################################################### | 100% </span></span><br><span class="line">jieba-<span class="number">0.39</span>           | <span class="number">5.6</span> MB    | <span class="comment">############################################################################################################################################################### | 100% </span></span><br><span class="line">ca-certificates-<span class="number">2019</span> | <span class="number">145</span> KB    | <span class="comment">############################################################################################################################################################### | 100% </span></span><br><span class="line">openssl-<span class="number">1.1</span><span class="number">.1</span>d       | <span class="number">1.9</span> MB    | <span class="comment">############################################################################################################################################################### | 100% </span></span><br><span class="line">Preparing transaction: done</span><br><span class="line">Verifying transaction: \ WARNING conda.core.path_actions:verify(<span class="number">963</span>): Unable to create environments file. Path <span class="keyword">not</span> writable.</span><br><span class="line">  environment location: /Users/xxhuang/.conda/environments.txt</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line">Executing transaction: done</span><br></pre></td></tr></table></figure><p>如图显示，jieba 包安装完成。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Anaconda 安装部分三方包流程说明。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>数据可视化：heatmap筛选对标签影响较大的特征值</title>
    <link href="http://example.com/2020/12/28/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%9Aheatmap%E7%AD%9B%E9%80%89%E5%AF%B9%E6%A0%87%E7%AD%BE%E5%BD%B1%E5%93%8D%E8%BE%83%E5%A4%A7%E7%9A%84%E7%89%B9%E5%BE%81%E5%80%BC/"/>
    <id>http://example.com/2020/12/28/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%9Aheatmap%E7%AD%9B%E9%80%89%E5%AF%B9%E6%A0%87%E7%AD%BE%E5%BD%B1%E5%93%8D%E8%BE%83%E5%A4%A7%E7%9A%84%E7%89%B9%E5%BE%81%E5%80%BC/</id>
    <published>2020-12-28T07:37:54.378Z</published>
    <updated>2020-12-28T09:13:25.281Z</updated>
    
    <content type="html"><![CDATA[<p>使用 heatmap 的下技巧，筛选一下，结果更直观。</p><a id="more"></a><p>下面是小案例演示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入包</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拿到titanic数据集</span></span><br><span class="line">titanic = sns.load_dataset(<span class="string">&#x27;titanic&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看前5行数据</span></span><br><span class="line">titanic.head()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1609140640896-847ce8d4-65a4-46c0-9f19-88ae2e48097b.png#align=left&display=inline&height=162&margin=%5Bobject%20Object%5D&name=image.png&originHeight=162&originWidth=814&size=27638&status=done&style=none&width=814" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">corr = titanic.corr()</span><br><span class="line">corr</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1609140664756-144d9e13-cdc1-4b76-af56-3517f5d7cac8.png#align=left&display=inline&height=241&margin=%5Bobject%20Object%5D&name=image.png&originHeight=241&originWidth=626&size=38019&status=done&style=none&width=626" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(corr)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1609140674729-f5a2d713-9013-4bea-b7b6-73b297e8e2b6.png#align=left&display=inline&height=298&margin=%5Bobject%20Object%5D&name=output_2_1.png&originHeight=298&originWidth=403&size=10963&status=done&style=none&width=403" alt="output_2_1.png"></p><p>筛选出对标签“alone”相关系数大于 5 的特征。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">threshold = <span class="number">0.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将相关系数绝对值大于 0.5 的特征筛选出来</span></span><br><span class="line">corrmat = titanic.corr()</span><br><span class="line">top_corr_features = corrmat.index[<span class="built_in">abs</span>(corrmat[<span class="string">&quot;alone&quot;</span>])&gt;threshold]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">g = sns.heatmap(titanic[top_corr_features].corr(),annot=<span class="literal">True</span>,cmap=<span class="string">&quot;RdYlGn&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1609140684585-2f4af2f2-ef9e-4d38-b916-35c86f4cc32b.png#align=left&display=inline&height=579&margin=%5Bobject%20Object%5D&name=output_4_0.png&originHeight=579&originWidth=564&size=11355&status=done&style=none&width=564" alt="output_4_0.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用 heatmap 的下技巧，筛选一下，结果更直观。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="数据可视化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>如何才算一个好的团建活动</title>
    <link href="http://example.com/2020/12/28/%E5%A6%82%E4%BD%95%E6%89%8D%E7%AE%97%E4%B8%80%E4%B8%AA%E5%A5%BD%E7%9A%84%E5%9B%A2%E5%BB%BA%E6%B4%BB%E5%8A%A8/"/>
    <id>http://example.com/2020/12/28/%E5%A6%82%E4%BD%95%E6%89%8D%E7%AE%97%E4%B8%80%E4%B8%AA%E5%A5%BD%E7%9A%84%E5%9B%A2%E5%BB%BA%E6%B4%BB%E5%8A%A8/</id>
    <published>2020-12-28T03:32:54.387Z</published>
    <updated>2020-12-29T07:00:13.316Z</updated>
    
    <content type="html"><![CDATA[<p>年底了，各个部门团建又开始了，甭管业绩好坏。</p><a id="more"></a><p>对于我这种不热衷团建、惧怕群体活动的人来说，简直是灾难。但是这件事，又不得不做。团建肩负着凝聚团队、活络新人、年终回顾。不过几年下来，我发现没有哪次达到预期效果。</p><p>所以呐，做好一次团建，太考验能力了。耗费心力，这种活动组织我避之不及。</p><p>那，既然逃不掉，就来说说我认为怎样才算是一个好的团建活动。</p><p>先是团建时间，如果可以不占用员工周末、业余时间。就尽量不要占用。这个最重要。我也不想在周末被安排一个又臭又长的活动。己所不欲，勿施于人。如果能拿出工作时间（2 - 3天），做一个好的团建活动概率会大增。</p><p>再就是趣味性，活动需要有趣。如果只是吃饭，干嘛要去那么远呢？最好设置一个主题，一个目标门槛。人越多门槛设置越低。人多的选择，比如说：徒步。总之是需要一个整体目标。不然平时本来熟悉的员工，抱团玩耍；本来内向的员工，愈感孤独。</p><p>有了主题和目标，团队就有目标感，实现过程就会有协作，协作才会有碰撞，碰撞产生火花。在价值上，重要的不是目标，是过程。</p><p>主题的选择，要匹配上想要建造的团队气质。有的团队，团建就是麻将扑克牌；有的团队，会选择话剧、滑雪等。总之，整个和决策者价值观相关。我会更倾向于一种向上精神传递，而不是享乐主义。比如徒步，可以历练意志，让人坚强，而不是麻将。</p><p>最后，有的领导走哪都喜欢带着 PPT。在团建的时候，我建议还是歇歇吧。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;年底了，各个部门团建又开始了，甭管业绩好坏。&lt;/p&gt;</summary>
    
    
    
    
    <category term="组织" scheme="http://example.com/tags/%E7%BB%84%E7%BB%87/"/>
    
  </entry>
  
  <entry>
    <title>致疯子们 -- Apple</title>
    <link href="http://example.com/2020/12/27/%E8%87%B4%E7%96%AF%E5%AD%90%E4%BB%AC--Apple/"/>
    <id>http://example.com/2020/12/27/%E8%87%B4%E7%96%AF%E5%AD%90%E4%BB%AC--Apple/</id>
    <published>2020-12-27T11:12:15.330Z</published>
    <updated>2020-12-27T11:19:35.388Z</updated>
    
    <content type="html"><![CDATA[<p>Steve jobs 重回 Apple 的<a href="https://www.bilibili.com/s/video/BV1sE411D7Dz">一则广告</a>。</p><a id="more"></a><p>致疯子们</p><p>The misfits<br>那些格格不入者</p><p>The rebels<br>那些叛逆者</p><p>The troublemakers<br>那些麻烦制造者</p><p>The round pegs in the square holes<br>那些方孔里的圆钉</p><p>The ones who see things differently<br>那些另眼看世界者</p><p>They’re not fond of rules<br>他们不喜成规</p><p>And they have no respect for the status quo<br>他们不敬现状</p><p>You can quote them, disagree with them, glorify or vilify them<br>你可以引用他们、否定他们、夸奖他们、诟病他们</p><p>About the only thing you can’t do is ignore them<br>但是你无法忽略他们</p><p>Because they change things<br>因为他们改变事物</p><p>They push the human race forward<br>因为他们推进人类向前</p><p>And while some may see them as the crazy ones, we see genius<br>或许有人把他们当成疯子，我们视他们为天才</p><p>Because the people who are crazy enough to think they can change the world, are the ones who do.<br>因为人只有疯到认为自己可以改变世界，才是最终改变世界的人。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Steve jobs 重回 Apple 的&lt;a href=&quot;https://www.bilibili.com/s/video/BV1sE411D7Dz&quot;&gt;一则广告&lt;/a&gt;。&lt;/p&gt;</summary>
    
    
    
    
    <category term="诗词" scheme="http://example.com/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>数据可视化：sns.regplot 和 sns.distplot</title>
    <link href="http://example.com/2020/12/25/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%9Asns.regplot%20%E5%92%8C%20sns.distplot/"/>
    <id>http://example.com/2020/12/25/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%9Asns.regplot%20%E5%92%8C%20sns.distplot/</id>
    <published>2020-12-25T08:33:02.893Z</published>
    <updated>2020-12-28T09:13:42.454Z</updated>
    
    <content type="html"><![CDATA[<p>sns.regplot 和 sns.distplot 这两个图形的使用场景。</p><a id="more"></a><p>sns.regplot 用来比较两个变量的关系，是否符合线性回归。一般用来比较特征变量和标签变量上。sns.distplot 是直方图和核密度图（sns.kdeplot）的结合。用来看单个连续型变量的分布。</p><p>顺便说下直方图和条形图区别：</p><ul><li>直方图：先分箱，然后计算每个分箱频数的数据分布。直方图一般用于数字特征（连续型）；</li><li>条形图：一般用于类别特征，条形图有间距，直方图没有。</li></ul><p>先用小费数据集画出图形。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入包</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拿到小费数据集</span></span><br><span class="line">tips = sns.load_dataset(<span class="string">&#x27;tips&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据介绍： total_bill列为消费总金额；tip列为小费金额；sex列为顾客性别；smoker列为顾客是否抽烟；day列为消费的星期；time列为聚餐的时间段；size列为聚餐人数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看前5行数据</span></span><br><span class="line">tips.head()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1604987097200-eeb58af9-fb83-473d-94ed-bdff9573b153.png#align=left&display=inline&height=164&margin=%5Bobject%20Object%5D&name=image.png&originHeight=164&originWidth=347&size=15197&status=done&style=none&width=347" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">14</span>, <span class="number">4</span>))  <span class="comment"># 指定绘图对象宽度和高度</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ax=plt.subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">sns.regplot(x=<span class="string">&#x27;total_bill&#x27;</span>, y=<span class="string">&#x27;tip&#x27;</span>, data=tips, ax=ax, </span><br><span class="line">            scatter_kws=&#123;<span class="string">&#x27;marker&#x27;</span>:<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;s&#x27;</span>:<span class="number">3</span>,<span class="string">&#x27;alpha&#x27;</span>:<span class="number">0.3</span>&#125;,</span><br><span class="line">            line_kws=&#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;g&#x27;</span>&#125;);</span><br><span class="line">plt.xlabel(<span class="string">&#x27;total_bill&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;tip&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax=plt.subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line">sns.regplot(x=<span class="string">&#x27;total_bill&#x27;</span>, y=<span class="string">&#x27;size&#x27;</span>, data=tips, ax=ax, </span><br><span class="line">            scatter_kws=&#123;<span class="string">&#x27;marker&#x27;</span>:<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;s&#x27;</span>:<span class="number">3</span>,<span class="string">&#x27;alpha&#x27;</span>:<span class="number">0.3</span>&#125;,</span><br><span class="line">            line_kws=&#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;k&#x27;</span>&#125;);</span><br><span class="line">plt.xlabel(<span class="string">&#x27;total_bill&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;size&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax=plt.subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line">sns.distplot(tips[<span class="string">&#x27;total_bill&#x27;</span>].dropna())</span><br><span class="line">plt.xlabel(<span class="string">&#x27;total_bill&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1604987117509-d892cdbd-4a82-4a32-9bd3-c1f4727567ac.png#align=left&display=inline&height=265&margin=%5Bobject%20Object%5D&name=output_2_0.png&originHeight=265&originWidth=829&size=31780&status=done&style=none&width=829" alt="output_2_0.png"></p><p>图一是两个连续型变量比较。total_bill 直接拟合成一条直线，tip 是散点图。但就这个例子图形来看，这两个数据集有一定相关性，但相关性不强。</p><p>图二是一个连续型变量和一个分类变量关系比较。按照例子看基本是不相关的。</p><p>图三是直方图 + 核密度曲线。用来看单个变量的分布情况。</p><p>sns.regplot 和 sns.distplot 可以同时用，同时查看特征分布以及特征和变量关系。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;sns.regplot 和 sns.distplot 这两个图形的使用场景。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="数据可视化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub添加自定义网页</title>
    <link href="http://example.com/2020/12/25/Hexo+GitHub%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BD%91%E9%A1%B5/"/>
    <id>http://example.com/2020/12/25/Hexo+GitHub%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BD%91%E9%A1%B5/</id>
    <published>2020-12-25T07:09:47.413Z</published>
    <updated>2020-12-28T06:56:00.075Z</updated>
    
    <content type="html"><![CDATA[<p>最近在写文章时，需要用到 Jupyter Notebook 文件格式。一些文章内容希望引用下，转成 markdown 格式比较繁琐，表格图表比较多。于是想到把 Jupyter Notebook 格式转成 html，直接跳过 Hexo 生成。</p><a id="more"></a><p>Hexo 系列的博客文章是 Hexo 渲染的静态网页。所以 Hexo 都呈现出一种高度的统一化与规范化。不过 Hexo 提供了跳过渲染功能，使得可以直接在博客中放入自定义网页。</p><p>比如在博客中放入图片、自定义 404.html、自定义 About 页面等。</p><p>html 页面完成后，在 Hexo\source 目录下创建一个文件夹（文件夹名称任意）。部署完成后，将 html 文件放置于此文件夹，并重命名为 index.html 。</p><p>跳过渲染直接在编辑器打开 Hexo\source\，找到创建的文件夹中的 index.html 文件，在开头添加如下代码即可</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">---</span></span><br><span class="line"><span class="selector-tag">layout</span>: <span class="selector-tag">false</span></span><br><span class="line"><span class="selector-tag">---</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>添加该指令后，执行 hexo g 命令时便会跳过该 index.html 文件，index.html 不受当前 hexo 主题影响，完全是一个独立的网页，如果网页引用了 css 或 js，css 和 js 需使用外链或者将 css js 文件放入index.html同目录下引用。如果有图片，也需要放在同目录下。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在写文章时，需要用到 Jupyter Notebook 文件格式。一些文章内容希望引用下，转成 markdown 格式比较繁琐，表格图表比较多。于是想到把 Jupyter Notebook 格式转成 html，直接跳过 Hexo 生成。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>公众号开启赞赏</title>
    <link href="http://example.com/2020/12/24/%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%90%AF%E8%B5%9E%E8%B5%8F/"/>
    <id>http://example.com/2020/12/24/%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%90%AF%E8%B5%9E%E8%B5%8F/</id>
    <published>2020-12-24T05:45:37.488Z</published>
    <updated>2020-12-25T03:40:02.862Z</updated>
    
    <content type="html"><![CDATA[<p>让订阅号有个小改变。准备开启公众号赞赏了。</p><a id="more"></a><p>现在的情况是：</p><p>关注者不多，因为本质上，内容还不够好，不够精炼。希望随着时间推移，思考和实践积累，能够有些起色。</p><p>内容呢，属于垂直行业，阅读量也很低。即使这样，这个订阅号也一直在慢慢调整，去掉了文章底部二维码，微调了 LOGO。未来也许还会有。反正想到一些好玩的就过来尝试下。</p><p>好在数据的事情没那么在意。因为初衷还是为记录经验和认知，同时也锻炼输出能力、清晰表达观点的能力。</p><p>如果，有一些内容读者认为不错，那算是额外馈赠。毕竟“好内容”确实是很高的赞扬。</p><p>说到好的内容，还是方可成那句话：</p><blockquote><p>越来越多人懂得健康饮食：少吃垃圾食品，少摄入糖分，多吃蔬菜水果和五谷杂粮；其实，我们也应该用心打造自己的媒体食谱——摄入均衡、充分的信息营养，摒弃低质的信源。读什么，你就是什么。</p></blockquote><p>回到「赞赏」这个点，其实后续很多篇文章中，它其实是可有可无，视而不见的红色鲜艳按钮。但正向反馈总是激励人心的。</p><p>后台时不时能听到读者的赞美，也算是平凡时日、不可多得的惊喜。每次看到后，都会正襟危坐，然后回复：</p><p>“谢谢，期待一起进步。”</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;让订阅号有个小改变。准备开启公众号赞赏了。&lt;/p&gt;</summary>
    
    
    
    
    <category term="写作" scheme="http://example.com/tags/%E5%86%99%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>由有赞数据中台，想起的业务-组织发展</title>
    <link href="http://example.com/2020/12/23/%E7%94%B1%E6%9C%89%E8%B5%9E%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%8F%B0%EF%BC%8C%E6%83%B3%E8%B5%B7%E7%9A%84%E4%B8%9A%E5%8A%A1-%E7%BB%84%E7%BB%87%E5%8F%91%E5%B1%95/"/>
    <id>http://example.com/2020/12/23/%E7%94%B1%E6%9C%89%E8%B5%9E%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%8F%B0%EF%BC%8C%E6%83%B3%E8%B5%B7%E7%9A%84%E4%B8%9A%E5%8A%A1-%E7%BB%84%E7%BB%87%E5%8F%91%E5%B1%95/</id>
    <published>2020-12-23T11:17:37.989Z</published>
    <updated>2020-12-23T13:17:49.532Z</updated>
    
    <content type="html"><![CDATA[<p>上周六，去了有赞组织的大数据技术沙龙。我比较感兴趣的是关于数据中台部分内容。有赞 2 位同学合计分享了有赞内部数据成本治理、埋点平台、A/B Test 平台、增长分析平台。</p><a id="more"></a><p>先不聊数据和项目部分，这里主要说说业务和组织能力。</p><p>有赞的业务，主要在非电商平台。不像另一波围绕电商开放平台的企业。这里的区别就是：</p><ul><li>有赞的流量来源，是去中心化的。大品牌、线下零售、中小微商都是目标用户。这就决定了有赞需要自己找流量。所有有赞财报的营销成本非常高，至今还是亏损状态；</li><li>围绕电商开放平台服务商。90% 流量集中在平台服务市场。服务市场的大部分流量，集中在类目 TOP 上，因为平台会有各种排行榜。所以这种类型企业，营销成本非常低，要做的就是平台市场关系维护、服务市场运营（类似 App Store 运营）。</li></ul><p>这两种业务形态，又决定了公司组织架构。看财报有赞截止 2020 年底 3400 人，除去相当部分销售，基本全部开发人员。这部分开发全部投入在以有赞微商城为主的几款产品中。在组织架构上，除了前端开发人员，还有部分是一些中台能力提供。上面分享提到的数据中台就是部分能力。</p><p>而另外围绕电商开放平台服务商，发力点比较零散，应用都分散在各个平台上，又因为平台关系。数据基本不互通。这些工具没门槛，只有先发优势。所以很多创业小公司在做。这类公司的组织架构，就是围绕各个平台的业务单元组成，每块业务都是小创业公司。比较快，但没有沉淀。</p><p>所以，在这种组织对比下，有赞的数据中台格外突出。</p><p>接下来再延伸下，王兴之前有个对企业发展的划分，比较实用：</p><blockquote><p>企业发展有三个阶段，分别是市场驱动发展、领导力驱动发展和创新驱动发展。市场驱动发展，就是市场本身在快速增长，所以企业成长快，就是所谓的市场红利；领导力发展，就是企业通过管理、组织结构这些事情做得很好，在市场上能够抢到更多市场份额；创新驱动发展，就是创新业务，开创新服务，能通过创新提供更低成本的服务，更高的效率。</p></blockquote><p>为什么说这个，对应上面说的两种类型，现在微信推出小商店——影响有赞，电商平台流量基本见顶（除去快手、抖音。拼多多商家增速放缓）——影响平台服务商。</p><p>那么同样由市场驱动转向领导力阶段，这个阶段所要求的内部效率提升，组织能力提升。其实对人、管理能力的要求都很高。</p><ul><li>需要提前判断企业面临的转型。这是对 1 号位能力的要求；在红利吃光的情况内部转型，内外部压力会非常大。为什么马云说，要在出太阳的时候修屋顶，就是这个意思。</li><li>企业组织和内部效率的提升。对员工和管理者的能力是有要求的。短视的企业只看短期效益，采取最简单方式，缩减人员成本。看起来人均利润率提高了，但其实只是在吃老本。</li></ul><p>这个阶段，根据我的经验，至少需要 2 年才能体现效果。所以需要至少 2 年前就需要开始准备。</p><p>所以，现阶段看下来，哪类企业能通过管理、组织结构这些事情做得更好，不言自明。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;上周六，去了有赞组织的大数据技术沙龙。我比较感兴趣的是关于数据中台部分内容。有赞 2 位同学合计分享了有赞内部数据成本治理、埋点平台、A/B Test 平台、增长分析平台。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Management" scheme="http://example.com/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每周总结/2020/51</title>
    <link href="http://example.com/2020/12/23/%E6%AF%8F%E5%91%A8%E6%80%BB%E7%BB%93:2020:51/"/>
    <id>http://example.com/2020/12/23/%E6%AF%8F%E5%91%A8%E6%80%BB%E7%BB%93:2020:51/</id>
    <published>2020-12-23T03:44:04.850Z</published>
    <updated>2020-12-23T03:55:40.604Z</updated>
    
    <content type="html"><![CDATA[<p>极其不情愿的开始这篇周总结回顾。因为本已不打算以这种方式来回顾每周事情。但是由于这周事情太多，还未来得及准备好新的方式。另外，这类总结方式，又让最近的专注效率提升不少。</p><a id="more"></a><p>所以，还是继续写一篇。</p><h3 id="每周数据"><a href="#每周数据" class="headerlink" title="每周数据"></a>每周数据</h3><ul><li>目标：番茄数 84， 专注时间 35 小时。</li><li>实际：番茄数 93，专注时间 38 小时 25 分钟。</li></ul><p><img src="https://cdn.brambling.cn/uxcaff/WX20201223-115435.png" alt="image-20201223113546639"></p><p>按照数据统计，本周环比上周，专注时间增加了 4 个半小时。可以统计的效果已经显现。</p><h3 id="每周总结"><a href="#每周总结" class="headerlink" title="每周总结"></a>每周总结</h3><p>这周主要完成的几件事情：</p><ol><li>本周完成了 4 篇文章写作；</li><li>周六参加了有赞大数据技术沙龙；</li><li>完成「体验碎片」转型构思。</li><li>锻炼 2 次的计划未完成。</li></ol><p>下周计划</p><ol><li>计划整理完遗留的的所有事情，开始继续 Python 数据挖掘的学习；</li><li>有赞大数据技术沙龙的体验说明</li></ol><p>另外，这种流水账式终结。这样的记录毫无意义。权当是测试 Blog 样式吧。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;极其不情愿的开始这篇周总结回顾。因为本已不打算以这种方式来回顾每周事情。但是由于这周事情太多，还未来得及准备好新的方式。另外，这类总结方式，又让最近的专注效率提升不少。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Life" scheme="http://example.com/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>面试UI设计师问题清单</title>
    <link href="http://example.com/2020/12/22/%E9%9D%A2%E8%AF%95UI%E8%AE%BE%E8%AE%A1%E5%B8%88%E9%97%AE%E9%A2%98%E6%B8%85%E5%8D%95/"/>
    <id>http://example.com/2020/12/22/%E9%9D%A2%E8%AF%95UI%E8%AE%BE%E8%AE%A1%E5%B8%88%E9%97%AE%E9%A2%98%E6%B8%85%E5%8D%95/</id>
    <published>2020-12-22T04:02:37.606Z</published>
    <updated>2020-12-23T09:03:33.684Z</updated>
    
    <content type="html"><![CDATA[<p>最近面试了近 10 位 UI 设计师。记录下自己的面试方式。当然，面试流程会随着对 UI 设计师 这个岗位的理解逐渐调整。</p><a id="more"></a><p>首先申明下，我不是专职设计师。对于设计工具，之前会使用 PS 和 Sketch，现在流行的 Figma 只能算是简单了解，没有花太多时间。不过，曾经行业看重的 iOS 、Android  MD 设计规范以前花了很多时间研究（比如：搜素、导航、手势交互等等）。然后对于交互设计领域也有一些心得。在业余也曾输出过两个 App 项目 UI 视觉稿。</p><p>总结就是，对于 UI 领域，算是半吊子水平。所以面试分工是这样：具体设计细节会有设计师主管帮忙搞定，我负责设计技能（大概了解契合度）、协作、认知是否匹配。</p><p>设计技能上，首先会看候选人的工具。这点我觉得对于设计师、产品经理、开发工程师同样重要。能体现对于工具、协作流程的观点和追求、以及个人品位。前不久 @纯银 说：</p><blockquote><p>判断一个人的 “互联网化” 程度，不是看他每天在互联网上花多少时间，而是看他的信息获取渠道的质量，以及使用互联网服务的广度和深度。</p></blockquote><p>这点也可以用在设计师上。具体表现在：</p><ul><li>主力设计工具用哪些？</li><li>内部协作工具用什么？</li><li>获取设计行业资讯、学习渠道的方式和渠道有哪些？</li><li>是否有 Dribbble、站酷账号，日常输出方式有哪些？</li></ul><p>一位好的设计师，这部分的回答应该不会差。</p><p>接下来会根据设计作品，了解具体设计技能和设计方法。我一般会根据具体设计作品询问：</p><p><strong>技能方面</strong></p><ul><li> 作品上有 PC 和 App，这两个端在设计思路上，有什么不同？</li><li>如何判断设计的页面布局是优秀的？</li><li>拿到 xxx 部分需求，你自己的设计流程是怎样的？</li><li>如何看待 xxx 需求和其他 App（通常是一家大厂 App）的区别，为什么你没有这样设计。你觉得别人的设计合理吗？</li><li>xxx 产品是否有设计规范，这些规范制定原则是怎在考虑？ </li></ul><p><strong>协作方面</strong></p><ul><li>你和交互设计师的分工是怎样的？</li><li>设计师和团队的协作流程是怎样的。是否上线后跟踪（据我观察，上线后跟踪业务数据、上线效果，坚持做到的设计师很少）？</li><li>团队怎么评估一位设计师的优秀与否？</li><li>工作到现在，你碰到的好同事，有什么特征？</li></ul><p><strong>认知方面</strong></p><ul><li>对设计细节是否在乎？那作品 xxx 需求部分的设计细节。是否有考虑？</li><li>其他 App（通常是一家大厂 App）的是 xxx 设计（比如：搜索框架上了搜索按钮设计）。从设计的角度如何看待这种设计趋势？</li><li>UI 设计和公司业绩，关联度表面上没那么高，在某些现实情况下影响个人价值。你怎么看？</li></ul><p>这些问题了解清楚，基本上对设计师的能力有了大概判断，接下来就是常规关于优秀人才的判断了——自我驱动、责任心之类，这些不再赘述。值得一提的是，根据目前经验来看，遇见缺乏「主动性」设计师概率比其他岗位更大。这可能是这个岗位“拿到需求再干活儿”的属性有关。</p><p>好了，目前先说这些。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近面试了近 10 位 UI 设计师。记录下自己的面试方式。当然，面试流程会随着对 UI 设计师 这个岗位的理解逐渐调整。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Design" scheme="http://example.com/tags/Design/"/>
    
  </entry>
  
  <entry>
    <title>拼多多和淘宝的几个细节差异（2020年）</title>
    <link href="http://example.com/2020/12/20/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E5%92%8C%E6%B7%98%E5%AE%9D%E7%9A%84%E5%87%A0%E4%B8%AA%E7%BB%86%E8%8A%82%E5%B7%AE%E5%BC%82%EF%BC%882020%E5%B9%B4%EF%BC%89/"/>
    <id>http://example.com/2020/12/20/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E5%92%8C%E6%B7%98%E5%AE%9D%E7%9A%84%E5%87%A0%E4%B8%AA%E7%BB%86%E8%8A%82%E5%B7%AE%E5%BC%82%EF%BC%882020%E5%B9%B4%EF%BC%89/</id>
    <published>2020-12-20T13:08:11.115Z</published>
    <updated>2020-12-20T13:15:29.770Z</updated>
    
    <content type="html"><![CDATA[<p>还是和之前关于拼多多的几篇一样，也是属于仔细研究后速记，并不全面。</p><a id="more"></a><h3 id="开店资质要求不同"><a href="#开店资质要求不同" class="headerlink" title="开店资质要求不同"></a>开店资质要求不同</h3><p>拼多多开店资质、流程，相比淘宝更简单。下图是拼多多目前可以创建的店铺类型。在之前拼多多店铺类型比较少，目前已经赶上淘宝。</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1608453580833-d3685a7f-1b00-4de5-8197-fc7553046145.png#align=left&display=inline&height=331&margin=%5Bobject%20Object%5D&name=%E6%8B%BC%E5%A4%9A%E5%A4%9A%E5%BA%97%E9%93%BA%E5%88%86%E7%B1%BB.png&originHeight=441&originWidth=777&size=66077&status=done&style=none&width=583" alt="拼多多店铺分类.png"></p><p>除了企业店铺，极简方式，个人凭借身份证就可以。其实拼多多在这块设计上，一直做得非常好。在 2018 年需要商家快速发展时，商家只需要点击开店链接，一键就可以完成开店（和目前微信小商店个人开店流程一致），从淘宝拉了不少商家。</p><p>类似这种流程，其他平台是直接照搬淘宝，拼多多是自己做了很多创新。</p><h3 id="开店引导填写其他平台店铺链接，以及可以自带第三方平台销量"><a href="#开店引导填写其他平台店铺链接，以及可以自带第三方平台销量" class="headerlink" title="开店引导填写其他平台店铺链接，以及可以自带第三方平台销量"></a>开店引导填写其他平台店铺链接，以及可以自带第三方平台销量</h3><p>在开店时引导填写其他平台店铺链接，这个点没记错的话，应该也是拼多多的创新。这样做第 1 是方便平台统计商家属性，是否多平台、多类目等等； 第 2 是给后续流量倾斜、平台策略提供支撑。比如：如果商家是淘宝服饰类目 TOP 商家。官方对接和服务，立马就需要区别对待。</p><p>以及大概是今年前后时间，拼多多上线了一款工具，将其他平台商品搬到拼多多。这类工具其实已经存在多年。但是拼多多做了一件事，就是搬家到拼多多商品，自带第三方平台销量。这个功能上线后，商家趋之若鹜。从商家角度：我在其他平台的销量，也可以在拼多多上有流量倾斜，为什么不做？</p><p>在淘宝现阶段，这类功能是严禁存在，违规处罚。平台一直防止商品数据、订单数据外流，但是拼多多用尽各种方法，吸引淘宝商家入驻拼多多。用这类工具的商家，把淘宝商品搬到拼多多占比最大。</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1608455136029-94fafbd0-5455-4c0c-9d21-ed49373308b5.png#align=left&display=inline&height=491&margin=%5Bobject%20Object%5D&name=image.png&originHeight=491&originWidth=494&size=106898&status=done&style=none&width=494" alt="image.png"></p><h3 id="商家后台工具，允许大量代发经营模式存在"><a href="#商家后台工具，允许大量代发经营模式存在" class="headerlink" title="商家后台工具，允许大量代发经营模式存在"></a>商家后台工具，允许大量代发经营模式存在</h3><p>拼多多后台商家工具，有很多是给店群经营模式、代发经营模式的商家使用。这类场景实现目前分两类：第 1 类是直接爬取各个平台商品源到拼多多，出单后同步数据到对应平台下单。这类模式属于灰产，通过客户端、浏览器插件去爬、改页面数据。第 2 属于正规方式，目前 1688 开放平台开放对应商品数据接口，根据 1688 接口将商品数据发布到拼多多，产生订单后回 1688 下单。下面这张图是 1688 平台的流程。也就是说，淘宝不允许其他平台爬它的商品数据，但是 1688 平台希望各个平台商家来这里采购。</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/613759/1608456745383-e7d5e8b1-5f39-4310-bb83-dc15f4de7ac3.png#align=left&display=inline&height=199&margin=%5Bobject%20Object%5D&name=1688%E9%93%BA%E8%B4%A7%E5%88%B0%E6%8B%BC%E5%A4%9A%E5%A4%9A.png&originHeight=199&originWidth=743&size=64669&status=done&style=none&width=743" alt="1688铺货到拼多多.png"></p><p>这里和淘宝也不同。淘宝一直是管控工具，只能做网页端（或者淘宝官方提供的端），但是拼多多这边，工具是网页、客户端、浏览器插件，官方都默许可用。考虑到商家数据安全，这部分在后续应该会被取缔。但现阶段存在，帮助平台带来了大量商家。</p><p>这几个细节淘宝拼多多做法不同，看起来也不相干。但这些细节是帮助拼多多积累商家的重要因素。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;还是和之前关于拼多多的几篇一样，也是属于仔细研究后速记，并不全面。&lt;/p&gt;</summary>
    
    
    
    
    <category term="电商" scheme="http://example.com/tags/%E7%94%B5%E5%95%86/"/>
    
    <category term="拼多多" scheme="http://example.com/tags/%E6%8B%BC%E5%A4%9A%E5%A4%9A/"/>
    
  </entry>
  
  <entry>
    <title>个人知识管理之flomo工具</title>
    <link href="http://example.com/2020/12/17/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E4%B9%8Bflomo%E5%B7%A5%E5%85%B7/"/>
    <id>http://example.com/2020/12/17/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E4%B9%8Bflomo%E5%B7%A5%E5%85%B7/</id>
    <published>2020-12-17T14:45:11.565Z</published>
    <updated>2020-12-18T00:13:04.897Z</updated>
    
    <content type="html"><![CDATA[<p>这篇不只是介绍工具，还会聊聊我自己的信息–知识处理流程。PKM（个人知识管理）内容比较私人，有不同想法也正常，可以讨论。</p><a id="more"></a><h4 id="2-个认知前提"><a href="#2-个认知前提" class="headerlink" title="2 个认知前提"></a>2 个认知前提</h4><p>首先有两个我的认知前提。第 1 是之前有说明的<a href="https://uxcaff.com/2020/10/30/%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E4%BD%8E%E6%95%88%E9%98%85%E8%AF%BB/">如何避免低效阅读</a>。就是好的内容，一定要做笔记。不然只是变成「已读」状态而已。第 2 是知识和信息的理解。信息有有半衰期长和短的区别，比如：实时资讯就是短半衰期，练字就是长半衰期。长期摄入短半衰期的信息，会丢失深度思考能力，被掏干的灵魂只剩下二元论。非黑即白，少了五彩斑斓。之前方可成有说过一句对输入信息非常形象的描述：</p><blockquote><p>越来越多人懂得健康饮食：少吃垃圾食品，少摄入糖分，多吃蔬菜水果和五谷杂粮；其实，我们也应该用心打造自己的媒体食谱——摄入均衡、充分的信息营养，摒弃低质的信源。读什么，你就是什么。</p></blockquote><p>而长半衰期的信息积攒，慢慢会连成线，帮忙拆解一个个具体问题。这就是知识。</p><p>至于长半衰期信息的获取，以前是书籍。现在呢，根据信息的传播效率，书影音都行。这个观点，李如一在<a href="https://mp.weixin.qq.com/s/QLWP56zL_hQdyAH8l1ETxg">《明日世界生存指南》中的这篇文章</a>说得很清楚。</p><h4 id="PKM-流程"><a href="#PKM-流程" class="headerlink" title="PKM 流程"></a>PKM 流程</h4><p>有了这 2 个认知前提，再来说说具体的 PKM 流程。</p><p><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/613759/1608212925725-c315bb68-ed22-47b3-8f63-5831e3bb52f2.jpeg#align=left&display=inline&height=70&margin=%5Bobject%20Object%5D&name=yuque_diagram.jpg&originHeight=139&originWidth=1032&size=14374&status=done&style=none&width=516" alt="yuque_diagram.jpg"></p><p>对应这些流程，目前的辅助工具分别是：</p><ul><li>信息收集：轻芒杂志、Reeder（配合 RSSHub 使用）；</li></ul><ul><li>信息过滤：flomo，Cubox（类似 Pocket 的稍后阅读工具）；</li></ul><ul><li>内化知识：各类写作工具，比如：typora</li></ul><p>使用 RSS 订阅可以主动选择信息源，是目前获取信息最有效率的方式。好的信息使用 Cubox 稍后阅读。然后有启发的内容，放进 flomo，整理成知识卡片，日常回顾，最后进行输出。</p><p>再详细说明下。其中，Cubox 这款工具还在体验阶段，因为觉得一些细节交互没那么好。其次是关于信息源的选择，我目前是遵循 2 个策略：选我熟悉的领域，可以有小范围的延伸；尽量读经过时间验证的内容，或者看看厉害的人在读什么。这样在能保证内容质量的同时，有一些延伸，不至于限于自己专业。然后是对知识卡片的理解。这部分的理解，可以搜索了解卢曼-知识卡片，和参考阳志平的<a href="https://www.yangzhiping.com/psy/happy-new-year-faq3.html">跨年答疑（3）：卡片十二问</a>。最后是知识输出。保持输出既能锻炼清晰表达自己观点的能力，存档过程还能看到自己的认知演变。</p><p>好了，再来说说 flomo。</p><h4 id="flomo-的应用"><a href="#flomo-的应用" class="headerlink" title="flomo 的应用"></a>flomo 的应用</h4><p>flomo 不是一款写作工具，属于 PKM 一环。关于这款工具的设计，可以看看<a href="https://mp.weixin.qq.com/s/ftygGrDBsXUVK0meLs8qDg">flomo weekly vol.000 - flomo 浮墨笔记的源起 </a>这篇文章。目前我使用 flomo 的场景：</p><ul><li>即时灵感记录：使用 flomo 服务号和快捷指令；</li></ul><ul><li>文章摘录，内化文章内容后的二次创造；</li></ul><ul><li>时不时当作“稍后阅读”工具；</li></ul><ul><li>小段文章内容的创作（有时候写着写着就变成了一篇文章，这也是一种激发）；</li></ul><ul><li>知识卡片。用标签划分好知识领域，日常回顾。</li></ul><p>为什么说是 PKM 的一环，是因为根据上述使用场景。紧接着就会把这些信息转化为知识卡片。然后每个标签积攒成多后，就是一个个点状的 MEMO（flomo 对知识卡片或者灵感的叫法），后续就可以解决某一个问题，形成一篇文章、一个观点。</p><p>在 flomo 出现之前，一直使用 Mac 系统备忘录（其实在这之前来回使用了很多工具，最后回到极简的备忘录）。但备忘录并不是完全针对个人知识卡片而设计。flomo 这类工具，第 1 优先级就是激发灵感、想法。让用户有意愿记录。其次是提升记录内容的处理效率（记录、查找、二次创造、回顾）。flomo 会提供很多记录知识的解法，引导使用。不然，它就会变成备忘录、树洞或者其它。所以， flomo 的出现就是针对灵感和知识卡片记录。和我的 PKM 完全契合。</p><p>对于具体功能上，目前 flomo 看起来比较好的支持了文字，期待后续可以支持图片和文字的排版。因为有的文字会配以图片说明。至于排版，无须交给用户操作，flomo调试好一个不错的固定版式（类似图片大小、是否居中、边框、图文间距）就可以了。如果有 Mac 端，会非常欣喜。因为之前使用的是系统备忘录，整体比网页体验要好。</p><h4 id="关于-flomo-的延伸想法"><a href="#关于-flomo-的延伸想法" class="headerlink" title="关于 flomo 的延伸想法"></a>关于 flomo 的延伸想法</h4><p>好了，另外跳出来再说 2 个和 PKM 无关，但和 flomo 有关的想法。第 1 个，对于 flomo 这款产品来说，怎样才算做得好呢，如何来衡量它的价值？我目前想的是「MEMO利用率」。只是记录得多，和「收藏」没有区别，需要看的是：把 MEMO 转化成「输出」的次数，输出指的是：</p><ul><li>应用成文章的次数。比如：我上面引用方可成那段对输入信息的描述。之前的文章也有引用；</li></ul><ul><li>应用到音视频、交谈中的次数。</li></ul><p>除了对外的影响，还有对内影响个人认知的次数。当然，这个没办法精确衡量。</p><p>第 2 个，是关于 flomo 团队的 @少楠 和 @lightory。给人感觉非常真诚（而且刚好我也了解卢曼知识卡片方法和阳志平老师博客）。像这类工具，一般情况下，会选择有保证的公司。 毕竟这些属于个人数据（flomo 会做数据导出）。flomo 虽然是小团队，但有真诚背书。另外是关于 flomo 冷启动的方式，非常典型，我觉得类似的工具完全可以照搬学习这套方式。</p><p>如果日常有很多想法奔涌，如果你也了解卢曼的知识卡片。 相信你会有共鸣。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这篇不只是介绍工具，还会聊聊我自己的信息–知识处理流程。PKM（个人知识管理）内容比较私人，有不同想法也正常，可以讨论。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Thinking" scheme="http://example.com/tags/Thinking/"/>
    
  </entry>
  
</feed>
